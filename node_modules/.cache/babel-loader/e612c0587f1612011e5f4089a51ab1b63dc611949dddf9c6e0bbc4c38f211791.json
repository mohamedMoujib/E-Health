{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haoue\\\\Desktop\\\\E-Health\\\\Dashboard\\\\my-react-app-1\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL;\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [accessToken, setAccessToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const axiosInstance = axios.create({\n    baseURL: API_URL,\n    withCredentials: true // Enables cookies for refresh token\n  });\n\n  // Attach access token to requests\n  axiosInstance.interceptors.request.use(config => {\n    if (accessToken) {\n      config.headers[\"Authorization\"] = `Bearer ${accessToken}`;\n    }\n    return config;\n  }, error => Promise.reject(error));\n\n  // Handle token expiration by refreshing\n  axiosInstance.interceptors.response.use(response => response, async error => {\n    var _error$response;\n    if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !error.config._retry) {\n      error.config._retry = true;\n      try {\n        const refreshResponse = await axios.post(`${API_URL}/auth/refreshToken`, {}, {\n          withCredentials: true\n        });\n        setAccessToken(refreshResponse.data.accessToken);\n        error.config.headers[\"Authorization\"] = `Bearer ${refreshResponse.data.accessToken}`;\n        return axiosInstance(error.config); // Retry request with new token\n      } catch (refreshError) {\n        console.error(\"Session expired. Please log in again.\");\n        logout();\n        return Promise.reject(refreshError);\n      }\n    }\n    return Promise.reject(error);\n  });\n  useEffect(() => {\n    const checkToken = async () => {\n      try {\n        const response = await axios.post(`${API_URL}/auth/refreshToken`, {}, {\n          withCredentials: true\n        });\n        setAccessToken(response.data.accessToken);\n      } catch (error) {\n        console.error(\"No valid session found. Please log in.\");\n        setAccessToken(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkToken();\n  }, []);\n  const login = async formData => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/login`, formData, {\n        withCredentials: true\n      });\n      setAccessToken(response.data.accessToken);\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Authentication failed\";\n    }\n  };\n\n  // Signup function\n  const signup = async formData => {\n    try {\n      const response = await axios.post(`${API_URL}/auth/register`, formData);\n      return response.data;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Une erreur est survenue.\";\n    }\n  };\n  const logout = () => {\n    setAccessToken(null);\n    axios.post(`${API_URL}/auth/logout`, {}, {\n      withCredentials: true\n    }).catch(() => {});\n    window.location.href = \"/signin\";\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      accessToken,\n      login,\n      logout,\n      signup,\n      loading,\n      axiosInstance\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use AuthContext\n_s(AuthProvider, \"FjPTzRia8IlBCyg4gu7RAIZS2rs=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","AuthContext","AuthProvider","children","_s","accessToken","setAccessToken","loading","setLoading","axiosInstance","create","baseURL","withCredentials","interceptors","request","use","config","headers","error","Promise","reject","response","_error$response","status","_retry","refreshResponse","post","data","refreshError","console","logout","checkToken","login","formData","_error$response2","_error$response2$data","message","signup","_error$response3","_error$response3$data","catch","window","location","href","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/haoue/Desktop/E-Health/Dashboard/my-react-app-1/src/contexts/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [accessToken, setAccessToken] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const axiosInstance = axios.create({\r\n    baseURL: API_URL,\r\n    withCredentials: true, // Enables cookies for refresh token\r\n  });\r\n\r\n  // Attach access token to requests\r\n  axiosInstance.interceptors.request.use(\r\n    (config) => {\r\n      if (accessToken) {\r\n        config.headers[\"Authorization\"] = `Bearer ${accessToken}`;\r\n      }\r\n      return config;\r\n    },\r\n    (error) => Promise.reject(error)\r\n  );\r\n\r\n  // Handle token expiration by refreshing\r\n  axiosInstance.interceptors.response.use(\r\n    (response) => response,\r\n    async (error) => {\r\n      if (error.response?.status === 401 && !error.config._retry) {\r\n        error.config._retry = true;\r\n        try {\r\n          const refreshResponse = await axios.post(`${API_URL}/auth/refreshToken`, {}, { withCredentials: true });\r\n          setAccessToken(refreshResponse.data.accessToken);\r\n          error.config.headers[\"Authorization\"] = `Bearer ${refreshResponse.data.accessToken}`;\r\n          return axiosInstance(error.config); // Retry request with new token\r\n        } catch (refreshError) {\r\n          console.error(\"Session expired. Please log in again.\");\r\n          logout();\r\n          return Promise.reject(refreshError);\r\n        }\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    const checkToken = async () => {\r\n      try {\r\n        const response = await axios.post(`${API_URL}/auth/refreshToken`, {}, { withCredentials: true });\r\n        setAccessToken(response.data.accessToken);\r\n      } catch (error) {\r\n        console.error(\"No valid session found. Please log in.\");\r\n        setAccessToken(null);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    checkToken();\r\n  }, []);\r\n\r\n  const login = async (formData) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/auth/login`, formData, { withCredentials: true });\r\n      setAccessToken(response.data.accessToken);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data?.message || \"Authentication failed\";\r\n    }\r\n  };\r\n\r\n  // Signup function\r\n  const signup = async (formData) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/auth/register`, formData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data?.message || \"Une erreur est survenue.\";\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setAccessToken(null);\r\n    axios.post(`${API_URL}/auth/logout`, {}, { withCredentials: true }).catch(() => {});\r\n    window.location.href = \"/signin\";\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ accessToken, login, logout, signup, loading, axiosInstance }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use AuthContext\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}